{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Website\\\\OneStore-0.2\\\\frontend\\\\src\\\\components\\\\HomeComponents\\\\RegisterComponents\\\\UsernameInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport HomeInput from \"../HomeInput\";\nimport { UserIcon } from \"../../../Icons\";\nimport UsersDataService from \"../../../services/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userNameRegex = RegExp(\"^(?=[a-zA-Z0-9._]{6,20}$)(?!.*[_.]{2})[^_.].*[^_.]$\");\n/*\r\n    User name alert have not been implemented\r\n*/\n\nconst UsernameInput = props => {\n  _s();\n\n  //main attribute\n  const [spanClass, setSpanClass] = useState(\"label\");\n  const [alertText, setAlertText] = useState(\"Please use only letters, numbers, and periods(6-20)\");\n  const spanText = \"Username\";\n  let inputRightIcon = '';\n  let inputType = 'text';\n  let inputName = \"username\";\n  let inputClass = props.usernameOK ? \"form-input\" : \"form-input border-red\";\n\n  const handleChange = event => {\n    props.setUsername(event.target.value);\n    props.setUsernameOK(userNameRegex.test(event.target.value));\n\n    if (event.target.value === \"\") {\n      setSpanClass(\"label\");\n    } else {\n      setSpanClass(\"label spanUp\");\n    }\n  };\n\n  const checkUserNameAvailability = username => {\n    if (props.usernameOK) UsersDataService.getUserNameAvailability(username).then(res => {\n      if (!res.data.available) {\n        props.setUsernameOK(false);\n        setAlertText(\"User name is not available\");\n        return;\n      }\n\n      props.setUsernameOK(true);\n      setAlertText(\"Please use only letters, numbers, and periods(6-20)\");\n    });\n  };\n\n  const Alert = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        visibility: props.usernameOK ? \"hidden\" : \"visible\"\n      },\n      className: \"input-alert\",\n      children: alertText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(HomeInput, {\n    spanClass: spanClass,\n    setSpanClass: setSpanClass,\n    spanText: spanText,\n    icon: /*#__PURE__*/_jsxDEV(UserIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this),\n    inputRightIcon: inputRightIcon,\n    inputType: inputType,\n    inputName: inputName,\n    inputClass: inputClass,\n    value: props.username,\n    handleChange: handleChange,\n    alert: /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 52\n    }, this),\n    checkUserNameAvailability: checkUserNameAvailability\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsernameInput, \"kDzf3RjXeA6wZd7ala7NL73Zb5Q=\");\n\n_c = UsernameInput;\nexport default UsernameInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsernameInput\");","map":{"version":3,"sources":["D:/Documents/Website/OneStore-0.2/frontend/src/components/HomeComponents/RegisterComponents/UsernameInput.js"],"names":["React","useState","HomeInput","UserIcon","UsersDataService","userNameRegex","RegExp","UsernameInput","props","spanClass","setSpanClass","alertText","setAlertText","spanText","inputRightIcon","inputType","inputName","inputClass","usernameOK","handleChange","event","setUsername","target","value","setUsernameOK","test","checkUserNameAvailability","username","getUserNameAvailability","then","res","data","available","Alert","visibility"],"mappings":";;;AAAA,OAAOA,KAAP,IACIC,QADJ,QAEO,OAFP;AAGA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAEA,MAAMC,aAAa,GAAGC,MAAM,CAAC,qDAAD,CAA5B;AAEA;AACA;AACA;;AACA,MAAMC,aAAa,GAAGC,KAAK,IAAG;AAAA;;AAE1B;AACA,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BT,QAAQ,CAAC,OAAD,CAAzC;AACA,QAAM,CAACU,SAAD,EAAWC,YAAX,IAA2BX,QAAQ,CAAC,qDAAD,CAAzC;AACA,QAAMY,QAAQ,GAAG,UAAjB;AACA,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIC,SAAS,GAAG,MAAhB;AACA,MAAIC,SAAS,GAAG,UAAhB;AACA,MAAIC,UAAU,GAAIT,KAAK,CAACU,UAAP,GAAqB,YAArB,GAAoC,uBAArD;;AAEA,QAAMC,YAAY,GAAGC,KAAK,IAAG;AACzBZ,IAAAA,KAAK,CAACa,WAAN,CAAkBD,KAAK,CAACE,MAAN,CAAaC,KAA/B;AACAf,IAAAA,KAAK,CAACgB,aAAN,CAAoBnB,aAAa,CAACoB,IAAd,CAAmBL,KAAK,CAACE,MAAN,CAAaC,KAAhC,CAApB;;AAEA,QAAGH,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,EAA1B,EAA6B;AACzBb,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACH,KAFD,MAEK;AACDA,MAAAA,YAAY,CAAC,cAAD,CAAZ;AACH;AACJ,GATD;;AAWA,QAAMgB,yBAAyB,GAAIC,QAAD,IAAa;AAC3C,QAAGnB,KAAK,CAACU,UAAT,EACId,gBAAgB,CAACwB,uBAAjB,CAAyCD,QAAzC,EACKE,IADL,CACUC,GAAG,IAAG;AACR,UAAG,CAACA,GAAG,CAACC,IAAJ,CAASC,SAAb,EAAuB;AACnBxB,QAAAA,KAAK,CAACgB,aAAN,CAAoB,KAApB;AACAZ,QAAAA,YAAY,CAAC,4BAAD,CAAZ;AACA;AACH;;AAEDJ,MAAAA,KAAK,CAACgB,aAAN,CAAoB,IAApB;AACAZ,MAAAA,YAAY,CAAC,qDAAD,CAAZ;AACH,KAVL;AAWP,GAbD;;AAeA,QAAMqB,KAAK,GAAG,MAAK;AACf,wBACI;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAG1B,KAAK,CAACU,UAAP,GAAqB,QAArB,GAAgC;AAA7C,OAAV;AAAmE,MAAA,SAAS,EAAC,aAA7E;AAAA,gBAA4FP;AAA5F;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD;;AAMA,sBACI,QAAC,SAAD;AACQ,IAAA,SAAS,EAAEF,SADnB;AAC8B,IAAA,YAAY,EAAEC,YAD5C;AAC0D,IAAA,QAAQ,EAAEG,QADpE;AAEQ,IAAA,IAAI,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFd;AAE4B,IAAA,cAAc,EAAEC,cAF5C;AAGQ,IAAA,SAAS,EAAEC,SAHnB;AAG8B,IAAA,SAAS,EAAEC,SAHzC;AAIQ,IAAA,UAAU,EAAEC,UAJpB;AAIgC,IAAA,KAAK,EAAET,KAAK,CAACmB,QAJ7C;AAKQ,IAAA,YAAY,EAAER,YALtB;AAKoC,IAAA,KAAK,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAL3C;AAKsD,IAAA,yBAAyB,EAAEO;AALjF;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAnDD;;GAAMnB,a;;KAAAA,a;AAqDN,eAAeA,aAAf","sourcesContent":["import React, {\r\n    useState\r\n} from \"react\"\r\nimport HomeInput from \"../HomeInput\"\r\nimport {UserIcon} from \"../../../Icons\"\r\nimport UsersDataService from \"../../../services/users\"\r\n\r\nconst userNameRegex = RegExp(\"^(?=[a-zA-Z0-9._]{6,20}$)(?!.*[_.]{2})[^_.].*[^_.]$\");\r\n\r\n/*\r\n    User name alert have not been implemented\r\n*/\r\nconst UsernameInput = props =>{\r\n\r\n    //main attribute\r\n    const [spanClass,setSpanClass] = useState(\"label\");\r\n    const [alertText,setAlertText] = useState(\"Please use only letters, numbers, and periods(6-20)\");\r\n    const spanText = \"Username\";\r\n    let inputRightIcon = '';\r\n    let inputType = 'text';\r\n    let inputName = \"username\";\r\n    let inputClass = (props.usernameOK) ? \"form-input\" : \"form-input border-red\";\r\n    \r\n    const handleChange = event =>{\r\n        props.setUsername(event.target.value);\r\n        props.setUsernameOK(userNameRegex.test(event.target.value))\r\n\r\n        if(event.target.value === \"\"){\r\n            setSpanClass(\"label\")\r\n        }else{\r\n            setSpanClass(\"label spanUp\")\r\n        }\r\n    }\r\n\r\n    const checkUserNameAvailability = (username) =>{\r\n        if(props.usernameOK)\r\n            UsersDataService.getUserNameAvailability(username)\r\n                .then(res =>{\r\n                    if(!res.data.available){\r\n                        props.setUsernameOK(false);\r\n                        setAlertText(\"User name is not available\")\r\n                        return;\r\n                    }\r\n\r\n                    props.setUsernameOK(true);\r\n                    setAlertText(\"Please use only letters, numbers, and periods(6-20)\")                 \r\n                })\r\n    }\r\n\r\n    const Alert = () =>{      \r\n        return(\r\n            <p style={{visibility: (props.usernameOK) ? \"hidden\" : \"visible\"}} className=\"input-alert\">{alertText}</p>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <HomeInput \r\n                spanClass={spanClass} setSpanClass={setSpanClass} spanText={spanText} \r\n                icon={<UserIcon />} inputRightIcon={inputRightIcon} \r\n                inputType={inputType} inputName={inputName}\r\n                inputClass={inputClass} value={props.username} \r\n                handleChange={handleChange} alert={<Alert />} checkUserNameAvailability={checkUserNameAvailability} />\r\n    )\r\n}\r\n\r\nexport default UsernameInput;"]},"metadata":{},"sourceType":"module"}