{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Website\\\\OneStore-0.2\\\\frontend\\\\src\\\\components\\\\MainComponents\\\\Inventory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../../css/inventory.css\";\nimport ProductsDataService from '../../services/products';\nimport ProductItems from './InventoryComponents/ProductItem';\nimport { useHistory } from \"react-router\";\nimport AddProductModal from \"./InventoryComponents/AddProductModal\";\nimport QueryBox from \"./InventoryComponents/QueryBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Inventory = props => {\n  _s();\n\n  const history = useHistory();\n  const [query, setQuery] = useState(\"\");\n  const [stokDownValue, setStokDownValue] = useState(\"\");\n  const [stokUpValue, setStokUpValue] = useState(\"\");\n  const [sellUpValue, setSellUpValue] = useState(\"\");\n  const [sellDownValue, setSellDownValue] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [selectedSearch, setSelectedSearch] = useState(\"0\");\n  const [stokUpMax, setStokUpMax] = useState(\"0\");\n  const [sellUpMax, setSellUpMax] = useState(\"0\");\n  const [ownedProducts, setOwnedProducts] = useState([]);\n  const [overlayStyle, setOverlayStyle] = useState({});\n  useEffect(() => {\n    refreshProductsList();\n  }, []);\n\n  const refreshProductsList = () => {\n    ProductsDataService.getAllOwnedProducts().then(res => {\n      setOwnedProducts(res.data);\n    });\n  };\n\n  const typeQueryBox = e => {\n    setQuery(e.target.value);\n  };\n\n  const addProductToggle = () => {\n    setOverlayStyle({\n      left: 0\n    });\n  };\n\n  const closeModal = () => {\n    setOverlayStyle({\n      left: \"100%\"\n    });\n  };\n\n  const handleChange = e => {\n    switch (e.target.id) {\n      case \"queryType\":\n        setSelectedSearch(e.target.value);\n        break;\n\n      case \"searchInput\":\n        setSearchInput(e.target.value);\n        break;\n\n      case \"stokUp\":\n        setStokUpValue(e.target.value);\n        break;\n\n      case \"stokDown\":\n        setStokDownValue(e.target.value);\n        setStokUpMax(e.target.value);\n        break;\n\n      case \"sellUp\":\n        setSellUpValue(e.target.value);\n        break;\n\n      case \"sellDown\":\n        setSellDownValue(e.target.value);\n        setSellUpMax(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main-inventory\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Inventory, \"Xmoy9+Zx6fZDxphoialZDcdGhGY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Inventory;\nexport default Inventory;\n/*\r\n            <div className=\"queryBoxContainer\">\r\n                <input type=\"text\" name=\"queryBox\" id=\"queryBox\" className=\"acc-text-input\" value={query} onChange={typeQueryBox} placeholder=\"Search product here\" /> \r\n                <button className=\"add-product\" onClick={addProductToggle}>Add Product</button>\r\n            </div>\r\n            <div className=\"productListContainer\">\r\n                {ownedProducts.map(x=>{\r\n                    return <ProductItems key={x._id} price={x.price} name={x.name} stock={x.stock}/>\r\n                })}\r\n            </div>\r\n\r\n            <AddProductModal closeModal={closeModal} overlayStyle={overlayStyle} refreshProductsList={refreshProductsList}/>\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["D:/Documents/Website/OneStore-0.2/frontend/src/components/MainComponents/Inventory.js"],"names":["React","useState","useEffect","ProductsDataService","ProductItems","useHistory","AddProductModal","QueryBox","Inventory","props","history","query","setQuery","stokDownValue","setStokDownValue","stokUpValue","setStokUpValue","sellUpValue","setSellUpValue","sellDownValue","setSellDownValue","searchInput","setSearchInput","selectedSearch","setSelectedSearch","stokUpMax","setStokUpMax","sellUpMax","setSellUpMax","ownedProducts","setOwnedProducts","overlayStyle","setOverlayStyle","refreshProductsList","getAllOwnedProducts","then","res","data","typeQueryBox","e","target","value","addProductToggle","left","closeModal","handleChange","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport \"../../css/inventory.css\"\r\nimport ProductsDataService from '../../services/products'\r\nimport ProductItems from './InventoryComponents/ProductItem'\r\nimport { useHistory } from \"react-router\"\r\nimport AddProductModal from \"./InventoryComponents/AddProductModal\";\r\nimport QueryBox from \"./InventoryComponents/QueryBox\";\r\n\r\nconst Inventory = (props) =>{\r\n    const history = useHistory();\r\n    const [query,setQuery] = useState(\"\");\r\n\r\n    const [stokDownValue, setStokDownValue] = useState(\"\");\r\n    const [stokUpValue, setStokUpValue] = useState(\"\");\r\n    const [sellUpValue, setSellUpValue] = useState(\"\");\r\n    const [sellDownValue, setSellDownValue] = useState(\"\");\r\n    const [searchInput,setSearchInput] = useState(\"\");\r\n    const [selectedSearch,setSelectedSearch] = useState(\"0\");\r\n    const [stokUpMax,setStokUpMax] = useState(\"0\")\r\n    const [sellUpMax,setSellUpMax] = useState(\"0\")\r\n    const [ownedProducts,setOwnedProducts] = useState([]);\r\n    const [overlayStyle,setOverlayStyle] = useState({});\r\n\r\n    useEffect(()=>{\r\n        refreshProductsList();\r\n    },[])\r\n\r\n    const refreshProductsList = () =>{\r\n        ProductsDataService.getAllOwnedProducts().then((res)=>{\r\n            setOwnedProducts(res.data);\r\n        });\r\n    }\r\n\r\n    const typeQueryBox = (e) =>{\r\n        setQuery(e.target.value)\r\n    }    \r\n\r\n    const addProductToggle = () =>{\r\n        setOverlayStyle({left:0});\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        setOverlayStyle({left:\"100%\"})\r\n    }\r\n\r\n    const handleChange = (e) =>{\r\n        switch(e.target.id){\r\n            case \"queryType\":\r\n                setSelectedSearch(e.target.value);\r\n                break;\r\n            case \"searchInput\":\r\n                setSearchInput(e.target.value);\r\n                break;\r\n            case \"stokUp\":\r\n                setStokUpValue(e.target.value);\r\n                break;\r\n            case \"stokDown\":\r\n                setStokDownValue(e.target.value);\r\n                setStokUpMax(e.target.value);\r\n                break;\r\n            case \"sellUp\":\r\n                setSellUpValue(e.target.value);\r\n                break;\r\n            case \"sellDown\":\r\n                setSellDownValue(e.target.value);\r\n                setSellUpMax(e.target.value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <div id=\"main-inventory\">\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inventory;\r\n\r\n/*\r\n            <div className=\"queryBoxContainer\">\r\n                <input type=\"text\" name=\"queryBox\" id=\"queryBox\" className=\"acc-text-input\" value={query} onChange={typeQueryBox} placeholder=\"Search product here\" /> \r\n                <button className=\"add-product\" onClick={addProductToggle}>Add Product</button>\r\n            </div>\r\n            <div className=\"productListContainer\">\r\n                {ownedProducts.map(x=>{\r\n                    return <ProductItems key={x._id} price={x.price} name={x.name} stock={x.stock}/>\r\n                })}\r\n            </div>\r\n\r\n            <AddProductModal closeModal={closeModal} overlayStyle={overlayStyle} refreshProductsList={refreshProductsList}/>\r\n*/"]},"metadata":{},"sourceType":"module"}